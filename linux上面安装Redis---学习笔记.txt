配置环境变量
#set java env
JAVA_HOME=/usr/local/src/jdk1.8
JAVA_BIN=/usr/local/src/jdk1.8/bin
PATH=$JAVA_HOME/bin:$PATH
CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar
export JAVA_HOME JAVA_BIN PATH CLASSPATH

重进加载一下环境
source /etc/profile






关闭 linux 防火墙  chkconfig iptables off
		  service iptables stop
查看端口号被占用   netstat -tunlp | grep 2181
杀死进程          kill -9 pid号

			     
一. 安装redis

	1. 官网下载redis.tar.gz    （window版的直接放到电脑上面双击redis-windows-server.exe运行就行）

	2. 通过xshell放到linux上面， 解压 tar  -xvf  压缩包名字

	3. 编译一下  make  报错就要安装gcc， 然后clrean一下

	4. 安装 make install

	
二. 修改redis的配置文件redis.conf文件

	1.69行注掉  bind127.0.0.1   为了别的电脑能访问这台redis服务器
	
	2. 88行关闭保护模式  protected-mode no  能远程访问这个redis服务器
	
	3. 92行 端口号
	
	4. 136行开启后台启动  daemonize yes
	
	5. 699行开启aop模式   appendonly yes
	
	6. 597行删除内存策略  maxmemory-policy allkeys-lru  （几种模式见六里面的内存优化策略）
        设置密码  config set requirepass "123456" 这样在使用redis的时候就得先登录一下了  auth 123456
	
三. 运行redis

	1. 后台运行redis命令  redis-server redis-conf
	
	2. 进入redis客户端  redis-cli -p 6379
	
	3. 退出redis客户端  Ctrl+c
	
	4. 关闭redis        redis-cli -p 6379 shutdown
	
四. redis的存储数据的操作的一些命令

	1. String类型  
			a.存值               set key value
			b.取值               get key
			c.删除               del  key 
			d.获取值得长度       strlen  key
			e.判断值是否存在     exists  key   返回0或者1
			f.查询redis中的key   keys  *
			g.操作多个           mset key1 value1 key2 value2
			h.                   mget key1 key2
			i.append  追加
			  type key   查询类型
			  select 15  切换第16个数据库
			  flushdb     清空当前数据库
			  flushall    清空所有的数据库里面的值
			  incr key    当前的值加一
			  decr key    当前值减一
			  incrby key 10 当前值加10
			  decrby key 10 当前值减10
			  expire key 10 10秒之后删除
			  pexpire key 10 10毫秒之后删除
			  ttl key        查看剩余多长时间删掉
			  
	2.Hash类型		
		
	3.List类型
	
	4.Set类型
	
	5.Hset类型
	
	    注： 具体请看word文档
		
			  
五. redis持久化策略

	1.RDB模式
			redis默认持久化策略，定期持久化；可能会丢失数据；记录的数据是内存的快照，每次保存最新的数据，文件相对较小，
			数据恢复较快， 文件名称dump.rdb
	2.AOF模式
			需要手动开启，实时持久化，记录用户的过程，追加到持久化文件中，持久化文件相对较大，恢复的时间较长
			
			
		注：集群搭建主从结构，主机使用rdb模式， 从机使用aof模式
			
			  
六. 删除策略

	1. LRU模式：时间长的删除
			
	
	2. LFU模式：使用次数少的删除
			
			
	内存优化策略：
	1. allkeys-lru       所有数据采用lru删除数据
	2. allkeys-lfu       所有数据采用lfu删除数据
	3. volititle-lru     设定超时间的采用lru删除数据
	4. volititle-lfu     设定超时间的采用lfu删除数据
	5. volititle-random  设定超时时间的采用随机算法删除数据
	6. allkeys-random    所有的数据采用随机算法删除数据
	7. volititle-ttl     设定超市时间的采用ttl算法删除数据
	8. noeviction        默认策略，不删除数据，内存满了报错
	
	
七. 分片  （3台，内存扩容）

	1.根目录中创建shareds文件夹
	2.将 redis.conf文件复制到shareds文件夹中，分别命名为6379.conf， 6380.conf,  6381.conf，修改相应的端口
	

八. 哨兵  （3台 实现高可用，但是不能扩容）

	1.根目录中创建sentinel文件夹
    2.将 redis.conf文件复制到sentinel文件夹中，分别命名为6379.conf， 6380.conf,  6381.conf，修改相应的端口
	3.主从挂载： 查询当前是主机还是从机的命令   info replication
		规定6379为主， 6380 6381为从
		将6380挂载到6379身上：进到6380客户端里面，执行slave 192.168.92.129 6379
		将6381挂载到6379身上：进到6381客户端里面，执行slave 192.168.92.129 6379
			注：从机挂载到主机上面，就不能操作从机了，只能操作主机，数据会自动同步到从机里面
			
	4.哨兵服务启动时，先监控主机的状态，同时获取主机的相关信息，
		哨兵会通过心跳监测，定期的检查主机的状态
		如果发现主机超过三次没有响应，断定宕机，开启选举机制
		当哨兵推选一台从机当做主机时，其它的都是从机
	5.配置哨兵
		1.protected-mode no   关闭保护模式
		2.daemonize  yes      开启后台启动
		3.sentinel monitor mymaster 192.168.92.129 6379 1   监测主机ip和端口，1代表有一票，因为就有一个哨兵
		3.sentinel down-after-milliseconds mymaster 10000   主机宕机10s之后开始选举
		4.sentinel failover-timeout mymaster 180000         哨兵选举从机等待3分钟，还不成功就可以重新选举
	6.启动哨兵命令 redis-sentinel sentinel.conf
	
九. 集群（3主3从 实现高可用）
	
	1.redis根目录里面创建cluster文件夹
	2.里面创建6个空文件夹，分别为7000， 7001， 7002， 7003， 7004， 7005
	3.将redis.conf配置文件复制一份放到7000， 7001， 7002， 7003， 7004， 7005
	4.修改配置文件redis.conf文件里面的内容，总共11处需要改的
	
		1.bind 127.0.0.1      注释掉本地访问的ip
		2.protected-mode  no  关闭保护模式
		3.port 7000           修改端口号
		4.daemonize yes       启动后台
		5.pidfile /usr/local/src/redis/cluster/7000/redis.pid     修改pid号
		6.dir /usr/local/src/redis/cluster/7000                   修改持久化文件路径
		7.maxmemory-policy volititle-lru                          设定内存优化策略
		8.appendonly no       关闭aof，启用默认的rdb持久化模式
		9.cluster-enabled  yes 开启redis集群
		10.cluster-config-file nodes.conf  开启集群配置文件
		11.cluster-node-timeout            修改集群超时时间
		
	5.开启脚本（start.sh）
		#！/bin/sh
		redis-server 7000.conf &
		redis-server 7001.conf &
		redis-server 7002.conf &
		redis-server 7003.conf &
		redis-server 7004.conf &
		redis-server 7005.conf &
		保存  
		运行  sh start.sh
		
	6.关闭脚本  （stop.sh）
		#！/bin/sh
		redis-cli -p 7000 shutdown &
		redis-cli -p 7001 shutdown &
		redis-cli -p 7002 shutdown &
		redis-cli -p 7003 shutdown &
		redis-cli -p 7004 shutdown &
		redis-cli -p 7005 shutdown &
		保存
		运行  sh stop.sh
		
	7.集群搭建
		redis-cli --cluster create --cluster-replicas 1 192.168.203.128:7000 192.168.203.128:7001 192.168.203.128:7002 192.168.203.128:7003 192.168.203.128:7004 192.168.203.128:7005
	    注：命令行和ip之间的1代表一个主机跟一个从机；2代表一个主机跟2个从机
		
		哪台redis服务器宕机，所有的redis节点都可以检测，但是选举只能是主机选举
		
	
	
	

	
	
	
	
	
	
	
	
	
	
	

 
